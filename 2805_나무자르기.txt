#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>

using namespace std;

typedef long long ll;


// Parametric Search
// 최적화 문제를 결정 문제로 바꾸어 푸는 것


int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	
	ll N, M;  // N = 나무의 수 , M = 상근이가 가져가려는 나무의 길이

	cin >> N >> M;

	vector<ll> v(N); // 나무의 높이를 저장하는 벡터

	for (ll i = 0; i < N; i++)
		cin >> v[i];

	sort(v.begin(), v.end());

	ll start = 1;
	ll mid;
	ll end = v[N - 1];

	while (start <= end)
	{
		mid = (start + end) / 2;
		ll height = 0;
		for (ll i = 0; i < N; i++)
		{
			if (mid < v[i])
				height += v[i] - mid;
		}

		if (height >= M)
			start = mid + 1;
		else
			end = mid - 1;
	}

	cout << end << '\n';


	return 0;
}
	