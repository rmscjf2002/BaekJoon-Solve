#define _CRT_SECURE_NO_WARNINGS



#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <numeric>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;


int type[4][2] = 
{
	{1,0},
	{-1,0},
	{0,1},
	{0,-1}
};

// 0 -> x+1, right -> 3, left -> 2
// 1 -> x-1, right -> 2, left -> 3
// 2 -> y+1, left -> 1, right -> 0
// 3 -> y-1 , left -> 0, right -> 1

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	
	pair<int, int> pos = { 0,0 };

	int cur = 0;
	int curT = 0;
	int n, t;
	cin >> n >> t;

	vector<pair<int,string>> turn(n);

	for (int i = 0; i < n; i++)
		cin >> turn[i].first >> turn[i].second;

	for (int i = 0; i < n; i++)
	{
		for (int j = curT; j < turn[i].first; j++)
		{
			pos.first += type[cur][0];
			pos.second += type[cur][1];
		}

		curT = turn[i].first;

		if (cur == 0)
		{
			if (turn[i].second == "right")
				cur = 3;
			else if (turn[i].second == "left")
				cur = 2;
		}

		else if (cur == 1)
		{
			if (turn[i].second == "right")
				cur = 2;
			else if (turn[i].second == "left")
				cur = 3;
		}

		else if (cur == 2)
		{
			if (turn[i].second == "right")
				cur = 0;
			else if (turn[i].second == "left")
				cur = 1;
		}

		else if (cur == 3)
		{
			if (turn[i].second == "right")
				cur = 1;
			else if (turn[i].second == "left")
				cur = 0;
		}

	}

	for (int i = curT; i < t; i++)
	{
		pos.first += type[cur][0];
		pos.second += type[cur][1];
	}

	cout << pos.first << ' ' << pos.second << '\n';


	



	
	return 0;
}
