#define _CRT_SECURE_NO_WARNINGS



#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <numeric>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;

int arr[7][7];
bool isValid;

int type[8][2] =
{
	{-2,-1},
	{-1,-2},
	{1,-2},
	{2,-1},
	{-2,1},
	{-1,2},
	{1,2},
	{2,1}
};

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	
	pair<int, int> start;
	pair<int, int> before;
	isValid = true;

	for (int i = 0; i < 36; i++)
	{
		char c;
		int n;
		cin >> c >> n;

		pair<int, int> cur;
		cur.first = 6 - n;
		cur.second = c - 'A';
		if (i == 0)
		{
			start.first = 6 - n;
			start.second = c - 'A';
		}
		
		bool isMove = false;
		if (i > 0)
		{
			for (int i = 0; i < 8; i++)
			{
				int nx = before.first + type[i][0];
				int ny = before.second + type[i][1];

				if (nx < 0 || nx >= 6 || ny < 0 || ny >= 6)
					continue;

				if (nx == cur.first && ny == cur.second)
				{
					isMove = true;
					break;
				}
			}
		}
		else
			isMove = true;

		if (arr[cur.first][cur.second] || !isMove)
			isValid = false;
		

		arr[cur.first][cur.second]++;
		before.first = cur.first;
		before.second = cur.second;

	}

	bool isMove = false;
	for (int i = 0; i < 8; i++)
	{
		int nx = before.first + type[i][0];
		int ny = before.second + type[i][1];

		if (nx < 0 || nx >= 6 || ny < 0 || ny >= 6)
			continue;

		if (nx == start.first && ny == start.second)
		{
			isMove = true;
			break;
		}
	}


	if (isValid && isMove)
		cout << "Valid\n";
	else
		cout << "Invalid\n";
	return 0;
}
