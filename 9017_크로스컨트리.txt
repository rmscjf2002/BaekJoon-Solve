#define _CRT_SECURE_NO_WARNINGS



#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <numeric>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;



int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	int t;
	cin >> t;

	while (t--)
	{
		int n;
		cin >> n;

		vector<int> team(n);
		map<int, int> cnt;

		int Max = 0;

		for (int i = 0; i < n; i++)
		{
			cin >> team[i];
			Max = max(Max, team[i]);
		}
		for (int i = 0; i < n; i++)
			cnt[team[i]]++;

		
		vector<int> score(n);
		int cur = 1;

		for (int i = 0; i < n; i++)
		{
			if (cnt[team[i]] < 6)
			{
				score[i] = -1;
				continue;
			}

			score[i] = cur++;
		}


		vector<int> teamscore(n+1);
		vector<vector<int>> teamlist(n+1);
		
		for (int i = 0; i < n; i++)
		{
			int curteam = team[i];
			int curscore = score[i];

			if (curscore == -1)
				continue;

			teamlist[team[i]].push_back(curscore);
			if (teamlist[team[i]].size() <= 4)
				teamscore[team[i]] += curscore;
		}

		int val = 0x7f7f7f7f;
		int ans = 0;

		for (int i = 1; i <= n; i++)
		{

			if (teamscore[i] == 0)
				continue;

			if (teamscore[i] < val)
			{
				val = teamscore[i];
				ans = i;
			}

			else if (teamscore[i] == val)
			{
				if (teamlist[i][4] < teamlist[ans][4])
					ans = i;
			}
		}


		cout << ans << '\n';

	}
	

	return 0;
}
