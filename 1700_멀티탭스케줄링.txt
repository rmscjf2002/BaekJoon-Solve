#define _CRT_SECURE_NO_WARNINGS



#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <numeric>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;

int n, k;
int arr[101];
bool power[101];

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	
	
	cin >> n >> k;

	for (int i = 1; i <= k; i++)
		cin >> arr[i];

	int ans = 0;
	int cnt = 0;

	for (int i = 1; i <= k; i++)
	{
		int cur = arr[i];

		if (power[cur]) // 이미 꽂혀있으면 continue
			continue;

		if (cnt < n) // 비어있으면 꽂아준다.
		{
			power[cur] = true;
			cnt++;
		}

		else // 꽉 차 있으면 늦게사용하거나 이제 사용하지않는 플러그를 빼준다.
		{
			vector<pair<int, int>> v; // idx값과 전기용품이름 저장
			// 전기용품 이름은 k이하의 자연수
			for (int j = 1; j <= k; j++)
			{
				if (!power[j]) // 사용하지 않는 플러그는 continue;
					continue;
				
				bool visited = false;
				for (int z = i + 1; z <= k; z++)
				{
					
					if (arr[z] == j)
					{
						v.push_back({ z,j });
						visited = true;
						break;
					}
				}

				if (!visited) // 이후 사용 안하는 것은 k+1을 인덱스값으로 준다.
					v.push_back({ k + 1,j });
			}
			sort(v.begin(), v.end(), greater<>());
			int remove = v[0].second;
			power[remove] = false;
			power[cur] = true;
			ans++;
		}
	}

	cout << ans << '\n';
	
	return 0;
}
