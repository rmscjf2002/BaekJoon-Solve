#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <list>
#include <map>
#include <tuple>

using namespace std;


int type[8][2] = 
{
	{1,-2},
	{2,-1},
	{2,1},
	{1,2},
	{-1,-2},
	{-2,-1},
	{-2,1},
	{-1,2}
};

int visit[301][301];

int l;
int _x, _y; // 시작지점
int _X, _Y; // 도착지점


int BFS(int x, int y, int X, int Y)
{
	queue<pair<int, int>> q;
	q.push({ x,y });
	while (!q.empty())
	{
		x = q.front().first;
		y = q.front().second;
		q.pop();
		if (x == X && y == Y)
		{
			return visit[x][y];
		}

		for (int i = 0; i < 8; i++)
		{
			int nx = x + type[i][0];
			int ny = y + type[i][1];

			if (nx >= 0 && nx < l && ny >= 0 && ny < l && visit[nx][ny] == 0)
			{
				visit[nx][ny] = visit[x][y] + 1;
				q.push({ nx,ny });
			}
		}
	}
	return 0;
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	int t;
	cin >> t;
	while (t--)
	{
		int ans = 0;
		memset(visit, 0, sizeof(visit));

		cin >> l;
		cin >> _x >> _y;
		cin >> _X >> _Y;
		ans += BFS(_x, _y, _X, _Y);
		cout << ans << '\n';
	}
	

	return 0;
}	
/* 처음에 전역으로 queue를 선언하고 while(t--)에서 q.push를 해줬는데 ,
   그러면 while(t--)시작전에 q를 비우는 작업을 해줘야해서 BFS 내부에 queue 선언으로 바꿈.
   -> 백준 채점에서는 시간 변화없긴 했음 
*/	