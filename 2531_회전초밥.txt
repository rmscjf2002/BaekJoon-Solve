#define _CRT_SECURE_NO_WARNINGS



#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <numeric>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;



int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	int n, d, k, c;
	cin >> n >> d >> k >> c;

	vector<int> v(n);

	for (int i = 0; i < n; i++)
		cin >> v[i];

	int ans = 0;

	/*set<int> s;
	bool coupon = true;

	for (int i = 0; i < n; i++)
	{
		s.clear();
		coupon = true;
		for (int j = i; j < i + k; j++)
		{
			s.insert(v[j%n]);
			if (v[j%n] == c)
				coupon = false;
			
		}
		if (i >= 1 && coupon)
		{
			if (v[(i - 1) % n] == c)
				s.insert(v[(i - 1) % n]);
		}
		if(coupon && v[(i + k) % n] == c)
			s.insert(v[(i + k) % n]);

		int size = s.size();
		ans = max(ans, size);
	}
	*/ // 시간초과

	bool check[3001] = { 0 };
	for (int i = 0; i < n; i++)
	{
		int overlap = 0;
		bool coupon = true;

		for (int j = i; j < i + k; j++)
		{
			if (check[v[j%n]])
				overlap++;
			else
				check[v[j%n]] = 1;

			if (v[j%n] == c)
				coupon = false;
		}

		ans = max(ans, k - overlap + coupon);
		fill(check, check + 3001, 0);
	}
	
	cout << ans << '\n';

	return 0;
}
