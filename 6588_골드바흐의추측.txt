#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>

using namespace std;


// 4보다 큰 모든 짝수는 두 홀수 소수의 합으로 나타낼 수 있다.






int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	
	int not_prime[1000001] = { 0,1,0 };

	vector<int> v;

	for (int i = 2; i < 1000001; i++)
	{
		for (int j = i * 2; j < 1000001; j += i)
		{
			if (not_prime[j] == 0)
				not_prime[j] = 1;
		}
	}

	// 소수를 v에 저장
	for (int i = 2; i < 1000001; i++)
	{
		if (not_prime[i] == 0)
			v.push_back(i);
	}


	while (1)
	{
		int n;
		cin >> n;

		bool check = false;

		if (n == 0)
			break;

		for (int i = 0; v[i] < n; i++)
		{
			int n2 = n - v[i];
			if (not_prime[n2] == 0)
			{
				check = true;
				cout << n << " = " << v[i] << " + " << n2 << '\n';
				break;
			}
		}

		if(!check)
			cout << "Goldbach's conjecture is wrong." << '\n';
		
		
	}

	return 0;
}
	