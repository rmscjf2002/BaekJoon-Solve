#define _CRT_SECURE_NO_WARNINGS



#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <numeric>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;

int n;
vector<int> tree[51];
bool passNode[51];


void DFS(int node)
{
	for (int i = 0; i < tree[node].size(); i++)
	{
		passNode[tree[node][i]] = true;
		int nxt = tree[node][i];
		DFS(nxt);
	}
	return;
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	
	cin >> n;


	for (int i = 0; i < n; i++)
	{
		int a;
		cin >> a;
		if (a == -1)
			continue;

		else
			tree[a].push_back(i);
		
	}

	int erase;
	cin >> erase;

	passNode[erase] = true;
	DFS(erase);


	int ans = 0;

	for (int i = 0; i < n; i++)
	{
		if (passNode[i])
			continue;

		bool isclear = true;
		for (int j = 0; j < tree[i].size(); j++)
		{
			if (passNode[tree[i][j]])
				continue;
			isclear = false;
		}

		if (isclear)
			ans++;

	}

	cout << ans << '\n';

	
	return 0;
}
