#define _CRT_SECURE_NO_WARNINGS



#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <numeric>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;

vector<int> tree[500001];

bool visited[500001];
double leaf;

void DFS(int node)
{
	visited[node] = true;
	bool isLeaf = true;
	for (int i = 0; i < tree[node].size(); i++)
	{
		int nxt = tree[node][i];
		
		if (visited[nxt])
			continue;

		isLeaf = false;
		DFS(nxt);
	}

	if (isLeaf)
		leaf++;

	return;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);


	int n;
	double w;
	cin >> n >> w;

	for (int i = 1; i < n; i++)
	{
		int a, b;
		cin >> a >> b;
		tree[a].push_back(b);
		tree[b].push_back(a);
	}

	DFS(1);

	cout << fixed;
	cout.precision(10);
	cout << w / leaf << '\n';
	
	return 0;
}
