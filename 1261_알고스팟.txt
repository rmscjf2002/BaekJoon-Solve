#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;

#define INF 987654321

int n, m;
int miro[101][101] = { 0 };
int dist[101][101] = { 0 };

int type[4][2] = 
{
	{1,0},
	{-1,0},
	{0,1},
	{0,-1}
};

void BFS(int x, int y)
{
	dist[x][y] = 0;
	queue<pair<int, int>> q;
	q.push({ x,y });

	while (!q.empty())
	{
		x = q.front().first;
		y = q.front().second;
		q.pop();
		
		for (int i = 0; i < 4; i++)
		{
			int nx = x + type[i][0];
			int ny = y + type[i][1];

			if (nx >= 0 && nx < n && ny >= 0 && ny < m)
			{
				if (miro[nx][ny] == 1)
				{
					if (dist[nx][ny] > dist[x][y] + 1)
					{
						dist[nx][ny] = dist[x][y] + 1;
						q.push({ nx,ny });
					}
				}

				else
				{
					if (dist[nx][ny] > dist[x][y])
					{
						dist[nx][ny] = dist[x][y];
						q.push({ nx,ny });
					}
				}
			
			}
		}
	}
}


int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> m >> n;

	for (int i = 0; i < n; i++)
	{
		string s;
		cin >> s;
		for (int j = 0; j < m; j++)
		{
			dist[i][j] = INF;
			miro[i][j] = s[j] - '0';
		}
	}

	BFS(0, 0);
	cout << dist[n - 1][m - 1] << '\n';
	

	return 0;
}
	
