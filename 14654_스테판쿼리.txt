#define _CRT_SECURE_NO_WARNINGS



#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <numeric>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;



int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	
	int n;
	cin >> n;

	vector<int> v1(n);
	vector<int> v2(n);

	for (int i = 0; i < n; i++)
		cin >> v1[i];


	for (int i = 0; i < n; i++)
		cin >> v2[i];


	int p1cnt = 1, p2cnt = 1;
	int ans = 0;

	for (int i = 0; i < n; i++)
	{
		if (v1[i] == 1 && v2[i] == 3)
		{
			p1cnt++;
			p2cnt = 1;
			ans = max(ans, p1cnt);
		}

		else if (v1[i] == 3 && v2[i] == 1)
		{
			p2cnt++;
			p1cnt = 1;
			ans = max(ans, p2cnt);
		}

		else if (v1[i] == 3 && v2[i] == 2)
		{
			p1cnt++;
			p2cnt = 1;
			ans = max(ans, p1cnt);
		}

		else if (v1[i] == 2 && v2[i] == 3)
		{
			p2cnt++;
			p1cnt = 1;
			ans = max(ans, p2cnt);
		}

		else if (v1[i] == 2 && v2[i] == 1)
		{
			p1cnt++;
			p2cnt = 1;
			ans = max(ans, p1cnt);
		}

		else if (v1[i] == 1 && v2[i] == 2)
		{
			p2cnt++;
			p1cnt = 1;
			ans = max(ans, p2cnt);
		}

		else if (v1[i] == v2[i])
		{
			if (p1cnt < p2cnt)
			{
				p1cnt++;
				p2cnt = 1;
				ans = max(ans, p1cnt);
			}

			else if (p1cnt > p2cnt)
			{
				p2cnt++;
				p1cnt = 1;
				ans = max(ans, p2cnt);
			}
		}
	}

	cout << ans-1 << '\n';

	return 0;
}
