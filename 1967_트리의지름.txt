#define _CRT_SECURE_NO_WARNINGS



#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <numeric>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;


int n;
vector<pair<int, int>> tree[10001];
bool visited[10001];

int answer;
int maxLen;

void DFS(int node, int sum)
{
	visited[node] = true;

	if (sum > answer)
	{
		answer = sum;
		maxLen = node;
	}

	for (int i = 0; i < tree[node].size(); i++)
	{
		if (visited[tree[node][i].first])
			continue;

		DFS(tree[node][i].first, sum + tree[node][i].second);
	}
	return;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> n;

	for (int i = 1; i < n; i++)
	{
		int a, b, c;
		cin >> a >> b >> c;
		tree[a].push_back({ b,c });
		tree[b].push_back({ a,c });
	}

	DFS(1, 0);

	fill(visited, visited + n + 1, false);

	DFS(maxLen, 0);

	cout << answer << '\n';



	return 0;
}
