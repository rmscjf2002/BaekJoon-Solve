#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>

using namespace std;







int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	int n;
	cin >> n;

	deque<int> dq;

	while (n--)
	{
		string s;
		cin >> s;

		if (s == "push_front")
		{
			int a;
			cin >> a;
			dq.push_front(a);
		}

		else if (s == "push_back")
		{
			int a;
			cin >> a;
			dq.push_back(a);
		}

		else if (s == "pop_front")
		{
			if (!dq.empty())
			{
				cout << dq.front() << '\n';
				dq.pop_front();
			}
			else
				cout << -1 << '\n';
		}

		else if (s == "pop_back")
		{
			if (!dq.empty())
			{
				cout << dq.back() << '\n';
				dq.pop_back();
			}
			else
				cout << -1 << '\n';
		}

		else if (s == "size")
			cout << dq.size() << '\n';

		else if (s == "empty")
		{
			if (dq.empty())
				cout << 1 << '\n';
			else
				cout << 0 << '\n';
		}

		else if (s == "front")
		{
			if (dq.empty())
				cout << -1 << '\n';
			else
				cout << dq.front() << '\n';
		}

		else if (s == "back")
		{
			if (dq.empty())
				cout << -1 << '\n';
			else cout << dq.back() << '\n';
		}
	}

	return 0;
}
	