#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;
 

int n;
char sign[10];
vector<string> v;
bool visited[10] = { false };
string minans = "9999999999";
string maxans = "0";
void DFS(int cnt)
{
	if (cnt == n + 1)
	{
		for (int i = 0; i < n; i++)
		{
			if (sign[i] == '<')
			{
				if (v[i] >= v[i + 1])
					return;
			}

			else if (sign[i] == '>')
			{
				if (v[i] <= v[i + 1])
					return;
			}
		}

		string tmp = "";
		for (int i = 0; i < cnt; i++)
			tmp += v[i];
		
		if (minans > tmp)
			minans = tmp;

		if (maxans < tmp)
			maxans = tmp;

		return;
	}

	for (int i = 0; i < 10; i++)
	{
		if (!visited[i])
		{
			visited[i] = true;
			v.push_back(to_string(i));
			DFS(cnt + 1);
			v.pop_back();
			visited[i] = false;
		}
	}
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> sign[i];

	DFS(0);

	cout << maxans << '\n';
	cout << minans << '\n';
	
	return 0;
}
	
