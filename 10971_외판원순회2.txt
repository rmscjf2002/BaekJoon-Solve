#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;


int n;
int startpoint;
int ans = 123456789;
bool visited[10] = { false };
int city[10][10] = { 0 };

void DFS(int start, int sum , int cnt)
{
	if (cnt == n-1)
	{
		if (city[start][startpoint] != 0) // 원래 있던 도시로 돌아와야하므로
		{
			ans = min(sum+city[start][startpoint], ans);
			return;
		}
		
	}

	for (int i = 0; i < n; i++)
	{
		if (!visited[i] && city[start][i] != 0)
		{
			visited[i] = true;
			DFS(i, sum + city[start][i], cnt + 1);
			visited[i] = false;
		}
	}
}


int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> n;

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
			cin >> city[i][j];
	}

	for (int i = 0; i < n; i++)
	{
		
		startpoint = i;
		visited[i] = true;
		DFS(i, 0, 0);
		visited[i] = false;
		
		
	}
	
	cout << ans << '\n';

	return 0;
}
	