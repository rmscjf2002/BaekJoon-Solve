#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;

int n, k;
int Map[100001] = { 0 };
bool visited[100001] = { false };

void BFS(int cur, int cnt)
{
	visited[cur] = true;
	queue<pair<int, int>> q;
	q.push({ cur,cnt });

	while (!q.empty())
	{
		cur = q.front().first;
		cnt = q.front().second;
		q.pop();

		if (cur == k)
		{
			cout << cnt << '\n';
			return;
		}

		if (cur * 2 < 100001 && !visited[cur * 2])
		{
			visited[cur * 2] = true;
			q.push({ cur * 2,cnt });
		}

		if (cur - 1 >= 0 && !visited[cur - 1])
		{
			visited[cur - 1] = true;
			q.push({ cur - 1,cnt + 1 });
		}

		if (cur + 1 < 100001 && !visited[cur + 1])
		{
			visited[cur + 1] = true;
			q.push({ cur + 1, cnt + 1 });
		}

	}
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> n >> k;

	BFS(n, 0);

	return 0;
}
	
