#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>

using namespace std;




int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	int n; // n의 진짜 약수 개수
	cin >> n;
	vector<int> v; // 진짜 약수를 담을 벡터

	for (int i = 0; i < n; i++)
	{
		int a;
		cin >> a;
		v.push_back(a);
	}

	sort(v.begin(), v.end());

	int ans = v[0] * v[n - 1];

	// 진짜약수는 1과N이 아니므로 약수 최소값 * 최대값을 한 값이 ans가 됨
	// 12의 약수는 1 2 3 4 6 12 인데 1과 12는 진짜 약수가 아니므로
	// 2 3 4 6 을 오름차순으로 보면 첫번째 원소(2) * 마지막 원소(6) = 12 인 걸 알 수 있음 
	cout << ans << '\n';
	

	return 0;
}
	