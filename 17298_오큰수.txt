#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>

using namespace std;





// 골드문제는 시간제한 맞추기가 너무 어려운 것 같다.
// 해결하지 못하고 풀이를 찾아봤다.

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	
	int n;
	cin >> n;

	vector<int> v(n); // 입력값을 담을 벡터
	stack<int> st; // 인덱스값을 담을 스택
	vector<int> ans(n, -1); // 오큰수가 없을 경우 -1 이므로 n크기 벡터를 모두 -1로 초기화 시킴

	// 벡터에 입력값을 담음
	for (int i = 0; i < n; i++)
		cin >> v[i];

	for (int i = 0; i < n; i++)
	{
		// 스택에 인덱스값이 존재하면 v[i]와 비교해서 오큰수를 찾는다.
		while (!st.empty() && v[st.top()] < v[i])
		{
			ans[st.top()] = v[i];
			st.pop();
		}

		st.push(i);
	}

	for (int i = 0; i < n; i++)
		cout << ans[i] << ' ';
	cout << '\n';



	return 0;
}
	