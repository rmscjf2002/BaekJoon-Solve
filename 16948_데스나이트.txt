#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;


int type[6][2] =
{
	{-2,-1},
	{-2,1},
	{0,-2},
	{0,2},
	{2,-1},
	{2,1}
};

int n;
int r1, c1, r2, c2;
int board[201][201];
int visited[201][201];
bool check = false;
queue<pair<int, int>> q;

int main()
{
	ios_base::sync_with_stdio(false); 
	cin.tie(0);
	cout.tie(0);


	cin >> n;
	cin >> r1 >> c1 >> r2 >> c2;
	q.push({ r1, c1 });
	visited[r1][c1] = 1;

	while (!q.empty())
	{
		int x = q.front().first;
		int y = q.front().second;
		q.pop();

		if (x == r2 && y == c2)
		{
			check = true;
			break;
		}

		for (int i = 0; i < 6; i++)
		{
			int nx = x + type[i][0];
			int ny = y + type[i][1];

			if (nx >= n || ny >= n || nx < 0 || ny < 0)
				continue;

			if (visited[nx][ny] > 0)
				continue;

			visited[nx][ny] = visited[x][y] + 1;
			q.push({ nx,ny });
		}
	}

	if (!check)
		cout << -1 << '\n';

	else
		cout << visited[r2][c2]-1 << '\n';
	

	return 0;
}

