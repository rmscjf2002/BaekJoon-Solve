#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;

int board[52][52];
vector<pair<int, int>> house;
vector<pair<int, int>> chicken;
int n, m;


int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> n >> m;

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			cin >> board[i][j];
			if (board[i][j] == 1)
				house.push_back({ i,j });
			if (board[i][j] == 2)
				chicken.push_back({ i,j });
		}
	}

	vector<int> chickenarr(chicken.size(), 1);
	fill(chickenarr.begin(), chickenarr.begin() + chicken.size() - m, 0);

	int ans = 0x7f7f7f7f;

	do
	{
		int dist = 0;

		for (auto h : house)
		{
			int tmp = 0x7f7f7f7f;
			for (int i = 0; i < chicken.size(); i++)
			{
				if (chickenarr[i] == 0)
					continue;

				tmp = min(tmp, abs(h.first - chicken[i].first) + abs(h.second - chicken[i].second));
			}

			dist += tmp;
		}

		ans = min(ans, dist);

	} while (next_permutation(chickenarr.begin(), chickenarr.end()));
	

	cout << ans << '\n';

	return 0;
}

