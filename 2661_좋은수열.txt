#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>

using namespace std;


int n;
string s = "";
bool stop = false; // 좋은수열이면 DFS를 중지시키기 위한 변수

bool check(string _s) // 좋은수열인지 뒤부터 확인해서 겹치면 false를 반환함.
{
	int len = _s.length();
	int end = len - 1;

	for (int i = 1; i <= len / 2; i++)
	{

		if (_s.substr(end, i) == _s.substr(end - i, i))
			return false;

		end--;
		
	}
	return true;
}

void DFS(string _s, int depth)
{
	if (stop) // stop이 true면 좋은수열이므로 모두 return
		return;

	if (!check(_s)) // check 함수의 결과가 false면 나쁜수열이므로 return
		return;

	if (depth == n) // 깊이가 n이면 s에 만든 수열을 넣고, stop을 true로
	{
		s = _s;
		stop = true;
		return;
	}

	if (depth > n) // 깊이가 n을 넘었으면 return
		return;

	
	DFS(_s + "1", depth + 1);
	DFS(_s + "2", depth + 1);
	DFS(_s + "3", depth + 1);
	
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	
	cin >> n;

	

	DFS("",0);

	cout << s << '\n';

	return 0;
}
	