#define _CRT_SECURE_NO_WARNINGS



#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <numeric>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;



int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	string s;
	int vowelscnt = 0; // 3이상되면 not acceptable
	int Consonantscnt = 0; // 3이상되면 not acceptable
	bool not_accept = false;
	int alpha[26] = { 0 };

	while (1)
	{
		fill(alpha, alpha + 26, 0);
		not_accept = false;
		vowelscnt = 0;
		Consonantscnt = 0;
		bool vowel = false;
		bool consonant = false;
		int a, e, i, o, u;
		a = e = i = o = u = 0;
		cin >> s;
		if (s == "end")
			break;
		a = s.find('a');
		e = s.find('e');
		i = s.find('i');
		o = s.find('o');
		u = s.find('u');

		if (a == string::npos && e == string::npos && i == string::npos && o == string::npos && u == string::npos)
			not_accept = true;
		
		if (!not_accept)
		{


			for (auto c : s)
			{

				if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')
				{
					vowel = true;
					consonant = false;
				}
				else
				{
					consonant = true;
					vowel = false;
				}

				if (vowel && (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'))
				{
					vowelscnt++;
					Consonantscnt = 0;
					consonant = false;
					if (vowelscnt >= 3)
					{
						not_accept = true;
						break;
					}
				}

				if (consonant && (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u'))
				{
					Consonantscnt++;
					vowelscnt = 0;
					vowel = false;
					if (Consonantscnt >= 3)
					{
						not_accept = true;
						break;
					}
				}



				if (!not_accept)
				{

					if (alpha[c - 'a'] == 0)
					{
						fill(alpha, alpha + 26, 0);
						alpha[c - 'a']++;
					}

					else
					{
						if (c - 'a' != 4 && c - 'a' != 14)
						{
							
							not_accept = true;
							break;
							
						}
					}

				}

				else
					break;
			}
		}
		cout << "<" << s << ">";

		if (not_accept)
			cout << " is not acceptable.\n";
		else
			cout << " is acceptable.\n";


	}
	

	return 0;
}
