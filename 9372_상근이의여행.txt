#define _CRT_SECURE_NO_WARNINGS



#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <numeric>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;


vector<int> tree[1001];
bool visited[1001];
int answer;

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	int t;
	cin >> t;
	
	while (t--)
	{
		int n, m;
		cin >> n >> m;

		for (int i = 1; i < 1001; i++)
			tree[i].clear();
		fill(visited, visited + 1001, false);
		answer = 0;

		for (int i = 0; i < m; i++)
		{
			int a, b;
			cin >> a >> b;
			tree[a].push_back(b);
			tree[b].push_back(a);
		}


		queue<int> q;
		q.push(1);
		visited[1] = true;

		while (!q.empty())
		{
			int node = q.front();
			q.pop();

			for (int i = 0; i < tree[node].size(); i++)
			{
				int nxt = tree[node][i];

				if (visited[nxt])
					continue;

				visited[nxt] = true;
				answer++;
				q.push(nxt);
			}
		}


		cout << answer << '\n';
	}
	

	return 0;
}
