#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>

using namespace std;





int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	
	// 3가지 연산
	// 1. pop_front
	// 2. front를 back으로
	// 3. back을 front로 

	int n, m; // 큐의크기 n 뽑아내려는 수의 개수 m
	cin >> n >> m;

	deque<int> dq;

	for (int i = 1; i <= n; i++)
		dq.push_back(i);

	
	int cnt = 0;
	int idx;

	// deque는 인덱싱사용이 가능하다.

	while (m--) // 값을 하나하나씩 뽑아낸다. 
	{
		int num;
		cin >> num;

		for (int i = 0; i < n; i++)
		{
			if (dq[i] == num) // 뽑아내고자하는 값의 idx를 뽑아냄
			{
				idx = i;
				break;
			}
		}

		int size = dq.size();

		// idx <=  size / 2 일때 왼쪽회전 ( <- 이 수식을 찾지 못해서 찾아봤다 ) 
		
		if (idx <= size / 2) // 왼쪽 회전.
		{
			while (1)
			{
				if (dq.front() == num)
				{
					dq.pop_front();
					break;
				}
				cnt++;
				dq.push_back(dq.front());
				dq.pop_front();
			}
		}

		else
		{
			while (1)
			{
				if (dq.front() == num)
				{
					dq.pop_front();
					break;
				}
				cnt++;
				dq.push_front(dq.back());
				dq.pop_back();
			}
		}
	}
	cout << cnt << '\n';


	return 0;
}