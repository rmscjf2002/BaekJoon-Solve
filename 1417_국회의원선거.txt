#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;








int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	/*
	int n;
	cin >> n;

	vector<int> v(n,0);

	int dasom;
	cin >> dasom;

	for (int i = 1; i < n; i++)
		cin >> v[i];

	int ans = 0;
	
	if (n >= 2)
	{
		sort(v.begin() + 1, v.end(), greater<>());
		
		int idx = 1;
		
		while (v[idx] >= dasom)
		{
			v[idx]--;
			dasom++;
			ans++;

			if ((v[idx] < dasom) || (idx == n-1))
				idx = 0;
			
	
			idx++;

		}
	}
	
	cout << ans << '\n';
	*/

	// 위 코드로 작성했는데 반례를 찾지못해서 다른사람의 코드를 참조했다.


	int n;
	cin >> n;
	int dasom;
	cin >> dasom;
	int ans = 0;

	vector<int> v;

	for (int i = 0; i < n - 1; i++)
	{
		int a;
		cin >> a;
		v.push_back(a);
	}

	// 우선순위 큐를 사용해 푸는 방법도 있었다.
	while (1)
	{
		int Max = 0;
		int idx = 0;

		for (int i = 0; i < n - 1; i++) // 최대 득표자를 찾아서 비교
		{
			if (Max < v[i])
			{
				Max = v[i];
				idx = i;
			}
		}

		if (dasom > Max) // 다솜이가 최대득표자가 되면 출력하고 while문 종료
		{
			cout << ans << '\n';
			break;
		}

		dasom++;
		v[idx]--;
		ans++;
	}



	return 0;
}
	