#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;



int n, m;
char board[51][51];
int ans = 123456789;
char white[8] = { 'W','B','W','B','W','B','W','B' };
char black[8] = { 'B','W','B','W','B','W','B','W' };

void func(int x, int y)
{
	int wcnt = 0; // white cnt
	int bcnt = 0; // black cnt

	int check = 1;
	for (int i = x; i <= x + 7; i++)
	{
		int widx = 0; // white idx
		int bidx = 0; // white idx

		int widx2 = 0; // black idx
		int bidx2 = 0; // black idx
		
		// #1. white 시작
		for (int j = y; j <= y + 7; j++)
		{
			if (check % 2 == 1)
			{
				if (white[widx] != board[i][j])
					wcnt++;
			}

			else
			{
				if (black[bidx] != board[i][j])
					wcnt++;
			}
			
			widx++;
			bidx++;
		}

		// #2. black 시작
		
		for (int j = y; j <= y + 7; j++)
		{
			if (check % 2 == 1)
			{
				if (black[bidx2] != board[i][j])
					bcnt++;
			}
			else
			{
				if (white[widx2] != board[i][j])
					bcnt++;
			}

			widx2++;
			bidx2++;
		}
		check++;
	}


	ans = min({ ans,wcnt,bcnt });

}


int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);



	cin >> n >> m;



	for (int i = 0; i < n; i++)
	{
		string s;
		cin >> s;
		for (int j = 0; j < s.length(); j++)	
			board[i][j] = s[j];
	}


	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			if(i+7 < n && j+7 < m)
				func(i, j);
		}
	}

	cout << ans << '\n';
	
	return 0;
}
	