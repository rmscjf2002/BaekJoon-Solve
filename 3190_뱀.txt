#define _CRT_SECURE_NO_WARNINGS



#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cassert>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <numeric>
#include <ctime>
#include <deque>
#include <set>
#include <list>
#include <map>
#include <tuple>
#include <sstream>
#include <iomanip> // 출력포매팅 라이브러리


using namespace std;


int n, k, x, y, snake, l;
int d, ans;
int board[102][102];
int type[4][2] =
{
	{0,1},
	{1,0},
	{0,-1},
	{-1,0}
};
char c;
deque<pair<int, int>> dq;
queue<pair<int, char>> pos;


int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	
	cin >> n >> k;
	while (k--)
	{
		cin >> x >> y;
		board[x][y] = 1;
	}

	cin >> l;
	while (l--)
	{
		cin >> snake >> c;
		pos.push({ snake,c });
	}

	dq.push_front({ 1,1 });

	while (1)
	{

		auto cur = dq.front();
		board[cur.first][cur.second] = -1;
		ans++;

		int nx = cur.first + type[d][0];
		int ny = cur.second + type[d][1];

		if (nx < 1 || nx > n || ny < 1 || ny > n || board[nx][ny] == -1)
			break;
		
		if (board[nx][ny] != 1)
		{
			
			auto tail = dq.back();
			board[tail.first][tail.second] = 0;
			dq.pop_back();
			
		}
		
		auto rotd = pos.front();
		if (rotd.first == ans)
		{
			if (rotd.second == 'L')
				d = (d + 3) % 4;
			else
				d = (d + 1) % 4;

			pos.pop();
		}

		dq.push_front({ nx,ny });

	}

	cout << ans << '\n';
	

	return 0;
}
